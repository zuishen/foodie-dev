<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="work.jimmmy.foodie.mapper.ItemsMapperCustom" >
    <select id="searchItems" parameterType="Map" resultType="work.jimmmy.foodie.pojo.vo.SearchItemsVO">
        select
            i.id as itemId,
            i.item_name as itemName,
            i.sell_counts as sellCounts,
            ii.url as imgUrl,
            tempSpec.price_discount as price
        from items i left join items_img ii on i.id = ii.item_id
                     left join
             (
                 select item_id, MIN(price_discount) price_discount from items_spec group by item_id
             ) tempSpec
             on i.id = tempSpec.item_id
        where
            ii.is_main = 1
            <if test=" paramsMap.keywords != null and paramsMap.keywords != ''">
                and i.item_name like '%${paramsMap.keywords}%'
            </if>
            order by
            <choose>
                <when test=" paramsMap.sort == &quot;c&quot;">
                    i.sell_counts desc
                </when>
                <when test=" paramsMap.sort == &quot;p&quot;">
                    tempSpec.price_discount asc
                </when>
                <otherwise>
                    i.item_name asc
                </otherwise>
            </choose>
    </select>
    <!-- k: 默认，c：根据销量排序，p：根据价格排序 -->

    <select id="searchItemsBy3rdCat" parameterType="Map" resultType="work.jimmmy.foodie.pojo.vo.SearchItemsVO">
        select
        i.id as itemId,
        i.item_name as itemName,
        i.sell_counts as sellCounts,
        ii.url as imgUrl,
        tempSpec.price_discount as price
        from items i left join items_img ii on i.id = ii.item_id
        left join
        (
        select item_id, MIN(price_discount) price_discount from items_spec group by item_id
        ) tempSpec
        on i.id = tempSpec.item_id
        where
            ii.is_main = 1
        and
            i.cat_id = #{paramsMap.catId}
        order by
        <choose>
            <when test=" paramsMap.sort == &quot;c&quot;">
                i.sell_counts desc
            </when>
            <when test=" paramsMap.sort == &quot;p&quot;">
                tempSpec.price_discount asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>
    <!-- k: 默认，c：根据销量排序，p：根据价格排序 -->
    
    <select id="queryItemsBySpecIds" parameterType="List" resultType="work.jimmmy.foodie.pojo.vo.ShopCartVo">
        select
            t_items.id as itemId,
            t_items.item_name as itemName,
            t_items_img.url as itemImgUrl,
            t_items_spec.id as specId,
            t_items_spec.name as specName,
            t_items_spec.price_discount as priceDiscount,
            t_items_spec.price_normal as priceNormal
        from
             items_spec t_items_spec
        left join
             items t_items
        on
            t_items.id = t_items_spec.item_id
        left join
            items_img t_items_img
        on
            t_items_img.item_id = t_items.id
        where t_items_img.is_main = 1
          and
            t_items_spec.id IN
            <foreach collection="paramsList" index="index" item="specId" open="(" close=")" separator=",">
                #{specId}
            </foreach>
    </select>

    <update id="decreaseItemSpecStock">
        update
            items_spec
        set
            stock = stock - #{pendingCounts}
        where
            id = #{specId}
        and
            stock >= #{pendingCounts}
    </update>
</mapper>